import { Worker, isMainThread, parentPort, workerData } from 'worker_threads';
import puppeteer from 'puppeteer-core';
import chromium from '@sparticuz/chromium';

/**
 * Worker –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
 */

if (!isMainThread && parentPort) {
	// –ö–æ–¥ –≤–æ—Ä–∫–µ—Ä–∞
	parentPort.on(
		'message',
		async (data: {
			html: string;
			viewportWidth: number;
			viewportHeight: number;
			quality?: number;
			optimizeForSpeed?: boolean;
		}) => {
			try {
				const {
					html,
					viewportWidth,
					viewportHeight,
					quality = 85,
					optimizeForSpeed = true,
				} = data;

				// –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–∏ –º—ã serverless –æ–∫—Ä—É–∂–µ–Ω–∏–µ
				const isProduction = process.env.NODE_ENV === 'production';

				// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
				const baseArgs = [
					'--no-sandbox',
					'--disable-setuid-sandbox',
					'--disable-dev-shm-usage',
					'--disable-accelerated-2d-canvas',
					'--no-first-run',
					'--no-zygote',
					'--single-process',
					'--disable-gpu',
					'--disable-extensions',
					'--disable-plugins',
					'--disable-background-timer-throttling',
					'--disable-backgrounding-occluded-windows',
					'--disable-renderer-backgrounding',
					'--disable-features=TranslateUI',
					'--disable-ipc-flooding-protection',
				];

				// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
				if (optimizeForSpeed) {
					baseArgs.push(
						'--disable-features=VizDisplayCompositor',
						'--disable-background-networking',
						'--disable-background-timer-throttling',
						'--disable-client-side-phishing-detection',
						'--disable-component-update',
						'--disable-default-apps',
						'--disable-domain-reliability',
						'--disable-features=AudioServiceOutOfProcess',
						'--disable-hang-monitor',
						'--disable-notifications',
						'--disable-offer-store-unmasked-wallet-cards',
						'--disable-offer-upload-credit-cards',
						'--disable-print-preview',
						'--disable-prompt-on-repost',
						'--disable-speech-api',
						'--disable-sync',
						'--hide-scrollbars',
						'--ignore-gpu-blacklist',
						'--metrics-recording-only',
						'--mute-audio',
						'--no-default-browser-check',
						'--no-pings',
						'--password-store=basic',
						'--use-mock-keychain',
					);
				}

				let browser;
				if (isProduction) {
					// –î–ª—è production (Railway/serverless) –∏—Å–ø–æ–ª—å–∑—É–µ–º chromium
					browser = await puppeteer.launch({
						args: [...chromium.args, ...baseArgs],
						defaultViewport: chromium.defaultViewport,
						executablePath: await chromium.executablePath(),
						headless: chromium.headless,
						timeout: 30000,
					});
				} else {
					// –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
					try {
						browser = await puppeteer.launch({
							args: [...chromium.args, ...baseArgs],
							defaultViewport: chromium.defaultViewport,
							executablePath: await chromium.executablePath(),
							headless: chromium.headless,
							timeout: 30000,
						});
					} catch (error) {
						// Fallback –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä
						browser = await puppeteer.launch({
							headless: true,
							args: baseArgs,
							timeout: 30000,
						});
					}
				}

				const page = await browser.newPage();

				try {
					// –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
					if (optimizeForSpeed) {
						// –û—Ç–∫–ª—é—á–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
						await page.setRequestInterception(true);
						page.on('request', (req) => {
							const resourceType = req.resourceType();
							if (
								resourceType === 'stylesheet' ||
								resourceType === 'font' ||
								resourceType === 'script'
							) {
								// –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–Ω–µ—à–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∏–Ω–ª–∞–π–Ω
								if (
									req.url().startsWith('http') &&
									!req.url().startsWith('data:')
								) {
									req.abort();
									return;
								}
							}
							req.continue();
						});

						// –û—Ç–∫–ª—é—á–∞–µ–º JavaScript –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
						await page.setJavaScriptEnabled(false);
					}

					// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º DPR –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞ –∞–≤–∞—Ç–∞—Ä–æ–∫
					const devicePixelRatio =
						quality >= 95 ? 2.5 : quality >= 90 ? 2 : 1.5; // –£–ª—É—á—à–µ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–∫
					await page.setViewport({
						width: viewportWidth,
						height: viewportHeight,
						deviceScaleFactor: devicePixelRatio,
					});

					console.log(
						`üìê Viewport: ${viewportWidth}x${viewportHeight}, DPR: ${devicePixelRatio}`,
					);

					// –ó–∞–≥—Ä—É–∂–∞–µ–º HTML —Å —Ç–∞–π–º–∞—É—Ç–æ–º
					await page.setContent(html, {
						waitUntil: optimizeForSpeed ? 'domcontentloaded' : 'networkidle0',
						timeout: 15000,
					});

					// –û–∂–∏–¥–∞–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —à—Ä–∏—Ñ—Ç–æ–≤, –µ—Å–ª–∏ –Ω–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
					if (!optimizeForSpeed) {
						await page.evaluateHandle('document.fonts.ready');
					}

					// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–±–∏—Ä–∞–µ–º fullPage, —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º clip
					console.log(
						`üì∏ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: ${viewportWidth}x${viewportHeight}, –∫–∞—á–µ—Å—Ç–≤–æ: ${quality}%`,
					);

					const screenshot = await page.screenshot({
						type: 'jpeg',
						quality: Math.max(85, Math.min(100, quality)), // –ü–æ–≤—ã—à–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–æ 85 –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–∫
						optimizeForSpeed: false, // –û—Ç–∫–ª—é—á–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –∞–≤–∞—Ç–∞—Ä–æ–∫
						clip: {
							x: 0,
							y: 0,
							width: viewportWidth,
							height: viewportHeight,
						},
					});

					console.log(`‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω, —Ä–∞–∑–º–µ—Ä: ${screenshot.length} –±–∞–π—Ç`);

					parentPort!.postMessage({
						success: true,
						imageBuffer: screenshot,
					});
				} finally {
					await page.close();
					await browser.close();
				}
			} catch (error) {
				parentPort!.postMessage({
					success: false,
					error: error instanceof Error ? error.message : 'Unknown error',
				});
			}
		},
	);
}

/**
 * –°–æ–∑–¥–∞–µ—Ç Worker –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞
 */
export async function generateImageInWorker(
	html: string,
	viewportWidth: number = 500,
	viewportHeight: number = 800,
	quality: number = 85,
	optimizeForSpeed: boolean = true,
): Promise<Buffer> {
	return new Promise((resolve, reject) => {
		const worker = new Worker(__filename);

		// –¢–∞–π–º–∞—É—Ç –¥–ª—è –≤–æ—Ä–∫–µ—Ä–∞ (60 —Å–µ–∫—É–Ω–¥)
		const timeout = setTimeout(() => {
			worker.terminate();
			reject(
				new Error(
					'Worker timeout: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–Ω—è–ª–∞ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏',
				),
			);
		}, 60000);

		worker.postMessage({
			html,
			viewportWidth,
			viewportHeight,
			quality,
			optimizeForSpeed,
		});

		worker.on(
			'message',
			(result: { success: boolean; imageBuffer?: Buffer; error?: string }) => {
				clearTimeout(timeout);
				worker.terminate();

				if (result.success && result.imageBuffer) {
					resolve(result.imageBuffer);
				} else {
					reject(new Error(result.error || 'Worker failed'));
				}
			},
		);

		worker.on('error', (error) => {
			clearTimeout(timeout);
			worker.terminate();
			reject(error);
		});

		worker.on('exit', (code) => {
			clearTimeout(timeout);
			if (code !== 0) {
				reject(new Error(`Worker stopped with exit code ${code}`));
			}
		});
	});
}
