import { Request, Response, NextFunction } from 'express';
import { TelegramBotService } from '../bot/telegramBot';
import fs from 'fs';
import path from 'path';

const botService = new TelegramBotService();

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–∏—Ä-–ª–∏—Å—Ç–∞ –≤ —á–∞—Ç
 * @param req - –∑–∞–ø—Ä–æ—Å
 * @param res - –æ—Ç–≤–µ—Ç
 * @param next - —Å–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
 */
export const sendTierListMessage = async (
	req: Request,
	res: Response,
	next: NextFunction,
) => {
	try {
		const { chatId, caption, clubName } = req.body;
		const imageBase64 = req.body.image; // base64 —Å—Ç—Ä–æ–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

		if (!chatId || !imageBase64) {
			res.status(400).json({ error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã' });
			return;
		}

		// –ü–∞—Ä—Å–∏–Ω–≥ base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
		const base64Data = imageBase64.replace(/^data:image\/png;base64,/, '');
		const imageBuffer = Buffer.from(base64Data, 'base64');

		// –í—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
		const tmpDir = path.join(process.cwd(), 'tmp/uploads');
		const fileName = `tierlist_${clubName || 'result'}_${Date.now()}.png`;
		const filePath = path.join(tmpDir, fileName);

		fs.writeFileSync(filePath, imageBuffer);

		// –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
		const messageText =
			caption ||
			`üèÜ –¢–ò–†-–õ–ò–°–¢ ${
				clubName?.toUpperCase() || ''
			}\n\nüëâ –°–æ–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∏—Ä-–ª–∏—Å—Ç –≤ –±–æ—Ç–µ @MyachProBot`;

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
		const bot = botService.getBot();
		await bot.sendPhoto(chatId, filePath, {
			caption: messageText,
			parse_mode: 'HTML',
		});

		// –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
		fs.unlinkSync(filePath);

		res.status(200).json({ success: true, message: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' });
		return;
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
		next(error);
	}
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –±–æ—Ç–∞
 */
export const getBotChats = async (
	req: Request,
	res: Response,
	next: NextFunction,
) => {
	try {
		// –í Telegram Bot API –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –º–µ—Ç–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —á–∞—Ç–æ–≤
		// –≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–∞—Ç–æ–≤ –≤ –ë–î
		// –ó–¥–µ—Å—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
		res.status(200).json({
			chatId: req.body.user?.id, // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ init data
			warning:
				'–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
		});
	} catch (error) {
		next(error);
	}
};
